@page "/"

<h3>IO</h3>

<input @bind-value="@content" />
<button class="btn btn-primary" @onclick="Write">Write</button>
<button class="btn btn-primary" @onclick="Read">Read</button>

<div style="word-wrap:break-word">@fileName</div>

@code {
    string content;

    string fileName = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), "blazor.txt");

    private void Write()
    {
        System.IO.File.WriteAllText(fileName, content);
    }

    private void Read()
    {
        content=System.IO.File.ReadAllText(fileName);
    }

}

<hr />
<h3>设备信息</h3>

<button class="btn btn-primary" @onclick="GetDeviceDisplay">GetDeviceDisplay</button>

<div>Height:@DisplayInfo.Height</div>
<div>Width:@DisplayInfo.Width</div>
<div>Rotation:@DisplayInfo.Rotation</div>

@code{

    DisplayInfo DisplayInfo;

    public void GetDeviceDisplay()
    {
        DisplayInfo = DeviceDisplay.MainDisplayInfo;
    }
}

<hr />
<h3>照片</h3>

<button class="btn btn-primary" @onclick="PickPhotoAsync">Photo</button>
<button class="btn btn-primary" @onclick="CapturePhotoAsync">Capture</button>
<div style="overflow-wrap:break-word">@PhotoPath</div>
<img src="@ImageData" width="100%" />

@code {
    string PhotoPath;
    string ImageData;

    async Task PickPhotoAsync()
    {
        try
        {
            var photo = await MediaPicker.PickPhotoAsync();
            await LoadPhoto(photo);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"CapturePhotoAsync THREW: {ex.Message}");
        }
    }

    async Task CapturePhotoAsync()
    {
        try
        {
            var photo = await MediaPicker.CapturePhotoAsync();
            await LoadPhoto(photo);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"CapturePhotoAsync THREW: {ex.Message}");
        }
    }

    async Task LoadPhoto(FileResult photo)
    {
        if (photo == null)
        {
            PhotoPath = "没有文件";
            return;
        }
        using var stream = await photo.OpenReadAsync();

        var photoBytes = new byte[stream.Length];
        stream.Read(photoBytes);
        var imagesrc = Convert.ToBase64String(photoBytes);
        ImageData = string.Format("data:image/jpeg;base64,{0}", imagesrc);

        PhotoPath = photo.FullPath;
    }

}